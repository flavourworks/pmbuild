struct vs_input_2d
{
    float2 position  : POSITION;
    float4 colour    : TEXCOORD0;
};

struct vs_input_2d_textured
{
    float4 position     : POSITION;
    float2 tex_coord    : TEXCOORD0;
};

struct vs_input_3d
{
    float4 position  : POSITION;
    float4 colour    : TEXCOORD0;
};

struct vs_output
{
    float4 position  : SV_POSITION0;
    float4 colour    : TEXCOORD0;
};

struct vs_output_textured
{
    float4 position  : SV_POSITION0;
    float4 tex_coord : TEXCOORD0;
};

struct ps_output
{
    float4 colour : SV_Target;
};

cbuffer per_pass_view : register(b0)
{
    float4x4 view_projection_matrix;
    float4x4 view_matrix;
};

cbuffer per_pass_view_2d : register(b1)
{
    float4x4 projection_matrix;
    float4   user_data;
};

declare_texture_samplers
{
    texture_2d( texture_0, 0 );
    texture_2dms( float4, 4, texture_msaa, 1 );
};

vs_output vs_main_2d( vs_input_2d input )
{
    vs_output output;
    
    float4 pos4 = float4( input.position.x, input.position.y, 0.0, 1.0);
    
    pos4 = mul( projection_matrix, pos4 );
    
    output.position = pos4;
    
    output.colour = input.colour;
    
    return output;
}

vs_output vs_main_3d( vs_input_3d input )
{    
    vs_output output;
    
    output.position = mul( input.position, view_projection_matrix );
            
    output.colour = input.colour;
    
    return output;
}

ps_output ps_main( vs_output input )
{
    ps_output output;
    
    output.colour = input.colour;
                
    return output;
}

vs_output_textured vs_main_screen_quad( vs_input_2d_textured input )
{
    vs_output_textured output;
    
    output.position = input.position;
    output.tex_coord = float4(input.tex_coord.x, input.tex_coord.y, 0.0, 0.0);
    
    return output;
}

ps_output ps_main_screen_quad( vs_output_textured input )
{
    ps_output output;
        
    output.colour = sample_texture( texture_0, input.tex_coord.xy );
    
    
    return output;
}

ps_output ps_main_screen_quad_msaa( vs_output_textured input )
{
    ps_output output;
        
    output.colour = sample_texture_2dms( texture_msaa, input.tex_coord.x * 1280, input.tex_coord.y * 720, 0 );
    output.colour += sample_texture_2dms( texture_msaa, input.tex_coord.x * 1280, input.tex_coord.y * 720, 1 );
    output.colour += sample_texture_2dms( texture_msaa, input.tex_coord.x * 1280, input.tex_coord.y * 720, 2 );
    output.colour += sample_texture_2dms( texture_msaa, input.tex_coord.x * 1280, input.tex_coord.y * 720, 3 );        
    
    output.colour /= 4.0;
    
    return output;
}

pmfx:
{    
    "debug_2d":
    {
        "vs": "vs_main_2d",
        "ps": "ps_main"
    },
    
    "debug_3d":
    {
        "vs": "vs_main_3d",
        "ps": "ps_main"
    },

    "sceen_quad":
    {
        "vs": "vs_main_screen_quad",
        "ps": "ps_main_screen_quad"
    },
    
    "sceen_quad_msaa":
    {
        "vs": "vs_main_screen_quad",
        "ps": "ps_main_screen_quad_msaa"
    }
}




