import common.jsn
import deferred_renderer.jsn
import post_process.jsn
{	    
    render_targets:
    {
        picking:
        {
            size    : equal,
            format  : r32u,
            cpu_read: true
        },
        
        picking_ds:
        {
            size  : equal,
            format: d24s8,
        },


        volume_raster:
        {
            size    : [128,128],
            format  : rgba8,
            cpu_read: true
        },
        
        volume_raster_ds:
        {
            size  : [128,128],
            format: d24s8,
        },
        
        volume_gi:
        {
			size : [256, 256, 256],
            format : rgba8,
            gpu_write : true,
			mips : true
        }
    },
        
    views:
    {
    	editor_main(main_view):
    	{
    		raster_state : default,
    		clear_colour : [0.0, 0.0, 0.0, 1.0]
    	},
    	
		editor_main_basic(main_view):
    	{
    		raster_state : default,
    		clear_colour : [0.0, 0.0, 0.0, 1.0],
			pmfx_shader  : forward_render,
            technique    : simple_lighting,
	
			sampler_bindings:
            [
                { texture: single_shadow_map, unit: 7, state: shadow_compare, shader: ps }
            ]
    	},
		
		editor_main_gi(main_view_temporal_aa):
    	{
    		raster_state : default,
    		clear_colour : [0.0, 0.0, 0.0, 1.0],
			
			sampler_bindings:
            [
                { texture: shadow_map, unit: 15, state: shadow_compare, shader: ps },
                { texture: area_light_textures, unit: 11, state: clamp_linear, shader: ps },
                { texture: omni_shadow_map, unit: 10, state: clamp_linear, shader: ps },
				{ texture: volume_gi, unit: 9, state: clamp_linear, shader: ps },
            ],
    	},
	    	                
        editor_view:
        {
            target             : [main_colour, main_depth],
            colour_write_mask  : 0xf,
            blend_state        : disabled,
            viewport           : [0.0, 0.0, 1.0, 1.0],
            raster_state       : wireframe,
            depth_stencil_state: default,
            pmfx_shader        : pmfx_utility,
            technique          : constant_colour,
            scene              : main_scene,
            camera             : model_viewer_camera,
            scene_views        : ["ecs_render_editor"]
        },
        
        picking_view:
        {
            target: [picking, picking_ds],
            clear :
            {
                picking:
                {
                    clear_colour_u:[-1, -1, -1, -1]
                }
            },
            clear_depth        : 1.0,
            viewport           : [0.0, 0.0, 1.0, 1.0],
            blend_state        : disabled,
            raster_state       : default,
            depth_stencil_state: default,
            pmfx_shader        : pmfx_utility,
            technique          : picking,
            scene              : main_scene,
            camera             : model_viewer_camera,
            scene_views        : ["ecs_render_scene"]
        },
                        
        volume_rasteriser:
        {
            target             : [volume_raster, volume_raster_ds],
            clear_colour       : [0.0, 0.0, 0.0, 0.0],
            clear_depth        : 1.0,
            colour_write_mask  : 0xf,
            blend_state        : disabled,
            viewport           : [0.0, 0.0, 1.0, 1.0],
            raster_state       : volume_raster,
            depth_stencil_state: default,
            scene              : main_scene,
            camera             : volume_rasteriser_camera,
            pmfx_shader        : pmfx_utility,
            technique          : volume_raster_albedo,
            scene_views        : ["ecs_render_scene"],
            render_flags       : ["forward_lit"],
            
            sampler_bindings:
            [
                { texture: shadow_map, unit: 15, state: wrap_linear, shader: ps },
            ],
        },
        
        volume_gi_compute:
        {
        	type: "compute",
        	target: [volume_gi],
        	clear_colour: [0.0, 0.0, 0.0, 0.0],
			pmfx_shader : "compute",
            technique : "volume_gi",
            scene: main_scene,
            scene_views : ["ecs_compute_volume_gi"],
			generate_mip_maps : true,
        }
    },
    
    view_sets: 
    {        
        editor: [
            multiple_shadow_views,
            multiple_area_light_views,
            multiple_omni_shadow_views,
            picking_view,
            editor_main,
            editor_view
        ],
        
        editor_basic: [
        	single_shadow_view,
			editor_main_basic,
            editor_view
        ],
        
        editor_gi: [
        	multiple_shadow_views,
			multiple_colour_shadow_views,
            multiple_area_light_views,
            multiple_omni_shadow_views,
            volume_gi_compute,
			picking_view,
			editor_main_gi,
            editor_view
        ],
        
        editor_post_processed: [
            picking_view,
            main_view_post_processed,
            editor_view,  
            volume_rasteriser
        ],
    },
    
    view_set: editor
}